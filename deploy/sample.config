# Sample deployment configuration file.  Modify for your own purposes.

# Create one configuration file per host, and use with the deployment 
# tool, e.g.
#   ./push.sh -c myserver.config
# These parameters can be overridden using arguments to push.sh.
# See also README.md in this directory.

# -----
# OPENTREE_TAG is a short, memorable identifier for the host modified by this
# file, typically in the form 'ot{#}'. This is mainly used in deployment log files.

OPENTREE_TAG=ot3

# -----
# OPENTREE_HOST is the host that you're going to initialize or update.
# This is used as a target for ssh during deployment. It is also used
# as the ServerName in the apache HTTPS vhost configuration.

OPENTREE_HOST=ctenophora.opentreeoflife.org

#-----
# OPENTREE_COMPONENTS is a list of components that are to be intalled
# or updated.  It doesn't hurt to install more components than are
# needed; the only cost is in the time needed to install or update
# ones that aren't used.
# Components are:
#    opentree    - the browser and curator web2py web apps
#    api	 - the studies API
#    oti	 - the studies index (indexing is done separately)
#    treemachine - treemachine neo4j instance and plugin (not the db)
#    taxomachine - treemachine neo4j instance and plugin (not the db)
# For the time being, if you include 'api', always include 'opentree'
# before it in the list... this may get fixed some time.
# The default is as below for legacy reasons, but should be set in
# each configuration file.  The API is not in the list, because
# initializing it is particularly time and space consuming.

# OPENTREE_COMPONENTS='opentree oti treemachine taxomachine'

#-----
# OPENTREE_PUBLIC_DOMAIN is the domain name used by site visitors (in website
# URLs) and by third-party authentication via Janrain, OAuth, etc. N.B. OAuth
# sign-in generally requires a specified callback URL with this domain name, so
# be sure this is set up before using a new domain name here! 
#
# This name is stored in the web2py configuration file
# (applications/opentree/private/config). If not specified, it will be
# set to the value of $OPENTREE_HOST.

OPENTREE_PUBLIC_DOMAIN=dev.opentreeoflife.org

# -----
# OPENTREE_IDENTITY is the name of the file containing the ssh private
# key used to log in to OPENTREE_HOST as the admin user (see
# OPENTREE_ADMIN, below).

# OPENTREE_IDENTITY=opentree.pem

# -----
# OPENTREE_GH_IDENTITY is the name of the file containing the ssh private
# key the API uses to log in to github.  Only needed if you're going to
# do API installations.

OPENTREE_GH_IDENTITY=opentreeapi-gh.pem

# -----
# Our family of APIs (treemachine, taxomachine, oti, phylesystem API) can be
# hosted on one *or* multiple servers. Here we define a base URL for each API.
# (The values shown here assume that all API services are on a single server.) 
#
# NOTE that in each case, these "base URLs" can include path information 
# and an optional port number.
#
# Also, NOTE that we're using scheme-relative (a.k.a. "protocol-relative")
# URLs here, so we can easily transition from HTTP to HTTPS with the caller.
 
TREEMACHINE_BASE_URL=//devapi.opentreeoflife.org/treemachine/v1
TAXOMACHINE_BASE_URL=//devapi.opentreeoflife.org/taxomachine/v1
OTI_BASE_URL=//devapi.opentreeoflife.org/oti/v1
OPENTREE_API_BASE_URL=//devapi.opentreeoflife.org/phylesystem/v1

# -----
# Some variables are used to authenticate the registered curation app on GitHub

CURATION_GITHUB_APP_ID=YOUR_GITHUB_APP_ID_HERE
CURATION_GITHUB_CLIENT_ID=YOUR_GITHUB_CLIENT_ID_HERE
CURATION_GITHUB_REDIRECT_URI=http://${OPENTREE_PUBLIC_DOMAIN}/curator/user/login
# N.B. The GITHUB_CLIENT_SECRET is stored separately, in a file like 'curation-GITHUB_CLIENT_SECRET-dev.opentreeoflife.org'
# Same for GITHUB_APP_PRIVATE_KEY_PEM

# -----
# Similar variables are used to authenticate the registered tree-viewer app on GitHub

TREEVIEW_GITHUB_APP_ID=YOUR_GITHUB_APP_ID_HERE
TREEVIEW_GITHUB_CLIENT_ID=YOUR_GITHUB_CLIENT_ID_HERE
TREEVIEW_GITHUB_REDIRECT_URI=http://${OPENTREE_PUBLIC_DOMAIN}/opentree/user/login
# N.B. The GITHUB_CLIENT_SECRET is stored separately, in a file like 'treeview-GITHUB_CLIENT_SECRET-dev.opentreeoflife.org'

# -----
# OPENTREE_DOCSTORE is the name of the OpenTreeOfLife git repository
# where the study objects can be found.  Defaults to phylesystem.

# OPENTREE_DOCSTORE=phylesystem

# -----
# COLLECTIONS_REPO is the name of the OpenTreeOfLife git repository
# where tree collections (JSON docs) can be found. Taxonomic amendments
# (changes to OT Taxonomy) are in the AMENDMENTS_REPO. FAVORITES_REPO is
# likewise where we should manage each user's objects of interest (clades, 
# tree collections, etc)

# COLLECTIONS_REPO=collections-1
# AMENDMENTS_REPO=collections-1
# FAVORITES_REPO=favorites-1

# -----
# OPENTREE_ADMIN is the name of the privileged admin user, the one
# that can do 'sudo' commands.  This is not to be confused with the
# unprivileged 'opentree' user.  Should be 'admin' if the installed OS
# is Debian (the default), or 'ubuntu' if the OS is Ubuntu (as was the
# case for the first two EC2 machines we set up).

# OPENTREE_ADMIN=admin

# -----
# The opentree_branch command specifies which branch to use for the
# given repo.  The default is always 'master'.

# opentree_branch opentree master
# opentree_branch phylesystem-api master
# opentree_branch oti master
# opentree_branch taxomachine master
# opentree_branch treemachine master
# opentree_branch peyotl master

# -----
# For development and debugging purposes, we can also set debug levels and
# logfile path information for some components.

# OPEN_TREE_API_LOGGING_LEVEL=debug
# OPEN_TREE_API_LOGGING_FILEPATH=log/api.log
# OPEN_TREE_API_LOGGING_FORMATTER=rich
# export PEYOTL_LOGGING_LEVEL=debug
# export PEYOTL_LOG_FILE_PATH=log/peyotl.log
